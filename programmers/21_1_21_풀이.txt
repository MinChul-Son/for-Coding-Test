프로그래머스 연습문제 level2 - 숫자의 표현
--------------------------------------------------------------------
논리:
단순하게 생각했다. 
이중 for문을 돌리는데 외부 for문은 1부터 n//2+1이 범위이다.
이유는 절반을 넘어가면 더하여 원래 값을 만들어 낼 수 없기 때문이다.
예를들어, 15라면 8을 넘어가면 더해서 만들수있는 숫자가 7밖에없다.
즉 이후는 검사할 필요가 없음.
내부 for문의 범위는 i부터 n+1인데 내부 for문은 더하기 시작할 값을 의미한다.
예로 i = 4 라면 j의 범위는 (4,16)이 되는데
내부for문을 수행하면서 count에 j를 더해서 넣어준다.
즉 4 + 5 + 6 처럼 1씩 증가하는 j값을 count와 더하고 이를
if문을 통해 주어진 n과 비교하여 같다면 정답을 +1해주고 break한다.
이렇게하고 제출했더니 효율성에서 실패했다.
이유를 생각해보니. 만약 count가 n보다 커질 때의 조건 즉, else를 정의해줘야한다.
그렇지 않으면 이미 count가 n보다 큼에도 계속해서 for문은 돌아가기 때문이다.
elif로 count > n보다 크면 break하도록 하고 제출하니 통과했다.


++정답이 1부터 시작하는 것은 모든 숫자는 자기 그자체로
표현할 수있는 경우를 미리 더해준 것이다.
1 + 2 + 3 + 4 + 5 = 15
4 + 5 + 6 = 15
7 + 8 = 15
15 = 15
여기서 맨마지막 경우 자기 그자체를 의미한다.




프로그래머스 연습문제 level2 - JadenCase 문자열 만들기
-------------------------------------------------------------------
논리:
먼저 공백을 기준으로 나누어 answer에 담는다.
for문을 통해 answer리스트의 요소를 하나씩 가져오는데 enumerate를 통해
인덱스 값도 같이 가져온다.
슬라이싱을 통해 첫번째 문자가 알파벳이면:
    첫번째 글자를 대문자로 나머지를 소문자로 바꿔줌.
    첫번째 글자 p[:1], 첫번째를 제외한 나머지글자 p[1:]
알파벳이 아니라면:
    첫번째 글자를 그대로 두고 나머지를 소문자로 바꿔줌.

마지막에는 문자열로 다시 합쳐줘야하는데 " ".join을 해줌으로써
단어 사이에 공백을 추가해줌.


++ s.title()이라는 함수를 쓰면 각 단어의 첫글자만 대문자로 나머지는
소문자로 돌려준다.. ㅋㅋㅋ 이런 내장함수도 있네 ;





프로그래머스 연습문제 level2